{"version":3,"file":"src_app_pages_settings_settings_module_ts.1d55845a7fd23577.js","mappings":"8SAUEA,SACEA,yBAKEA,yCAASC,EAATC,MAASD,mBAETD,uBAA4CA,8BAE9CA,QACAA,yBAKEA,yCAASG,EAATD,MAASC,iBAETH,uBAA4CA,8BAE9CA,QACFA,cAbgDA,sEAUAA,+FAIhDA,yBAOEA,uBAA8CA,8BAEhDA,eAFgDA,mGAexCA,gCACGA,SAAeA,kCADgCA,iBAC/CA,wBClDb,MAAMI,EAAiB,CACrB,CACEC,KAAM,GACNC,UCSJ,MAAM,QAYJC,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,GALAC,iBACAA,mBACAA,eACAA,uBACAA,WACAA,mBAjBVA,eAAwB,CACtB,CAAEC,KAAM,UAAWC,SAAU,MAC7B,CAAED,KAAM,UAAWC,SAAU,OAkB/BC,WACE,IAAIC,EACJ,QAASC,KAAQL,KAAKM,UAChBD,EAAKH,WAAaF,KAAKN,UAAUa,cACnCH,EAAiBC,GAIhBD,IACHA,EAAiBJ,KAAKM,UAAU,IAGlCN,KAAKQ,aAAeR,KAAKL,YAAYc,MAAM,CACzCC,SAAU,CAACN,KAGbJ,KAAKW,mBAGPA,mBACEX,KAAKY,mBAAqBZ,KAAKH,gBAAgBe,mBAC/CZ,KAAKa,eAAiBb,KAAKH,gBAAgBgB,eAG7CC,eACE,MAAMT,EAAOL,KAAKQ,aAAaO,SAASL,SAASM,MAAMd,SACvDF,KAAKN,UAAUuB,IAAIZ,GACnBL,KAAKJ,QAAQsB,IAAI,WAAYb,GAGzBc,qEACEnB,KAAKH,gBAAgBuB,sBAC3BpB,KAAKqB,iBAGDA,6DACJ,MAAMC,QAAgBtB,KAAKD,YAAYwB,OAAO,CAC5CC,QAASxB,KAAKN,UAAU+B,QAAQ,0BAChCC,cAAc,UAGVJ,EAAQK,UAEd3B,KAAKH,gBAAgB+B,UAErBC,WAAW,KACTP,EAAQQ,UACR9B,KAAKW,mBACLX,KAAKF,IAAIiC,iBACR,qDAtEMC,GAAY9C,kGAAZ8C,EAAYC,g+BFjBzB/C,wBAAiC,kBAAjCA,CAAiC,mBAG3BA,6BACFA,QACAA,qBAAWA,8BAA4CA,YAI3DA,uBACEA,gCAsBAA,8BAWAA,mBAAiC,gBAAjCA,CAAiC,cAAjCA,CAAiC,gBAGfA,gCAA2CA,QACvDA,yBAKEA,oCAAagD,mBAEbhD,sCAGFA,cAKNA,0BAOEA,gCACFA,iBAtEUA,wBAKGA,4DAKEA,+DAuBZA,8DAUGA,2CACMA,2BAEMA,8DAQ0BA,sCAe1CA,yaEpDS8C,GAAb,KDDO,IAAMG,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsB9C,IACtB8C,QAECD,GAAb,GEMaE,EAAb,MAAM,sDAAOA,4DAVF,CACPC,KACAC,KACAC,KACAC,KACAN,EACAO,SAISL,GAAb,EAAaA","names":["i0","ctx_r3","oxw","ctx_r5","routes","path","component","constructor","translate","formBuilder","storage","purchaseService","ref","loadingCtrl","this","name","langCode","ngOnInit","activeLanguage","lang","languages","currentLang","settingsForm","group","language","setPurchaseProps","purchasesAvailable","hasFullVersion","saveLanguage","controls","value","use","set","buyFullVersion","purchaseFullVersion","refreshStore","loading","create","message","instant","showBackdrop","present","refresh","setTimeout","dismiss","detectChanges","SettingsPage","selectors","ctx","SettingsPageRoutingModule","RouterModule","SettingsPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.page.ts","./src/app/pages/settings/settings.module.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"end\">\n      <ion-menu-button menu=\"first\"></ion-menu-button>\n    </ion-buttons>\n    <ion-title>{{ \"SETTINGS_PAGE.pageTitle\" | translate }} </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"purchasesAvailable && !hasFullVersion\">\n    <ion-button\n      class=\"ion-padding-horizontal offset-top\"\n      color=\"success\"\n      size=\"default\"\n      expand=\"block\"\n      (click)=\"buyFullVersion()\"\n    >\n      <ion-icon name=\"diamond-outline\"></ion-icon>&nbsp;\n      {{\"SETTINGS_PAGE.buyFullVersion\" | translate}}\n    </ion-button>\n    <ion-button\n      class=\"ion-padding-horizontal offset-top-small\"\n      color=\"primary\"\n      size=\"default\"\n      expand=\"block\"\n      (click)=\"refreshStore()\"\n    >\n      <ion-icon name=\"refresh-outline\"></ion-icon>&nbsp;\n      {{\"SETTINGS_PAGE.restorePurchases\" | translate}}\n    </ion-button>\n  </ng-container>\n  <ion-button\n    *ngIf=\"purchasesAvailable && hasFullVersion\"\n    class=\"ion-padding-horizontal offset-top\"\n    color=\"success\"\n    size=\"default\"\n    expand=\"block\"\n  >\n    <ion-icon name=\"bag-check-outline\"></ion-icon>&nbsp;\n    {{\"SETTINGS_PAGE.owningFullVersion\" | translate}}\n  </ion-button>\n\n  <form [formGroup]=\"settingsForm\">\n    <ion-list [inset]=\"true\" mode=\"ios\">\n      <ion-item>\n        <ion-label> {{ \"SETTINGS_PAGE.language\" | translate }} </ion-label>\n        <ion-select\n          interface=\"action-sheet\"\n          okText=\"Okay\"\n          cancelText=\"Cancel\"\n          formControlName=\"language\"\n          (ionChange)=\"saveLanguage()\"\n        >\n          <ion-select-option *ngFor=\"let lang of languages\" [value]=\"lang\"\n            >{{ lang.name }}</ion-select-option\n          >\n        </ion-select>\n      </ion-item>\n    </ion-list>\n  </form>\n\n  <ion-button\n    color=\"danger\"\n    class=\"ion-padding-horizontal deleteAccountButton\"\n    size=\"default\"\n    expand=\"block\"\n    routerLink=\"/accountdeletion\"\n  >\n    {{ \"SETTINGS_PAGE.deleteAccount\" | translate }}\n  </ion-button>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { PurchaseService } from \"src/app/services/purchase.service\";\n\ninterface Language {\n  name: string;\n  langCode: string;\n}\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"./settings.page.html\",\n  styleUrls: [\"./settings.page.scss\"],\n})\nexport class SettingsPage implements OnInit {\n  languages: Language[] = [\n    { name: \"English\", langCode: \"en\" },\n    { name: \"Deutsch\", langCode: \"de\" },\n    //{ name: \"FranÃ§ais\", langCode: \"fr\" },\n  ];\n\n  purchasesAvailable: boolean;\n  hasFullVersion: boolean;\n\n  settingsForm: FormGroup;\n\n  constructor(\n    private translate: TranslateService,\n    private formBuilder: FormBuilder,\n    private storage: Storage,\n    private purchaseService: PurchaseService,\n    private ref: ChangeDetectorRef,\n    private loadingCtrl: LoadingController\n  ) {}\n\n  ngOnInit() {\n    let activeLanguage: Language;\n    for (let lang of this.languages) {\n      if (lang.langCode === this.translate.currentLang) {\n        activeLanguage = lang;\n      }\n    }\n\n    if (!activeLanguage) {\n      activeLanguage = this.languages[0];\n    }\n\n    this.settingsForm = this.formBuilder.group({\n      language: [activeLanguage],\n    });\n\n    this.setPurchaseProps();\n  }\n\n  setPurchaseProps() {\n    this.purchasesAvailable = this.purchaseService.purchasesAvailable;\n    this.hasFullVersion = this.purchaseService.hasFullVersion;\n  }\n\n  saveLanguage() {\n    const lang = this.settingsForm.controls.language.value.langCode;\n    this.translate.use(lang);\n    this.storage.set(\"language\", lang);\n  }\n\n  async buyFullVersion() {\n    await this.purchaseService.purchaseFullVersion();\n    this.refreshStore();\n  }\n\n  async refreshStore() {\n    const loading = await this.loadingCtrl.create({\n      message: this.translate.instant(\"SETTINGS_PAGE.updating\"),\n      showBackdrop: true,\n    });\n\n    await loading.present();\n\n    this.purchaseService.refresh();\n\n    setTimeout(() => {\n      loading.dismiss();\n      this.setPurchaseProps();\n      this.ref.detectChanges();\n    }, 3000);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { SettingsPageRoutingModule } from \"./settings-routing.module\";\n\nimport { SettingsPage } from \"./settings.page\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    TranslateModule,\n  ],\n  declarations: [SettingsPage],\n})\nexport class SettingsPageModule {}\n"]}