{"version":3,"file":"src_app_pages_swarms_swarm-journal_journal-edit-entry_journal-edit-entry_module_ts.47f4789bcf4bbbc6.js","mappings":"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","names":["i0","ctx_r6","oxw","routes","path","component","constructor","route","formBuilder","journalService","navCtrl","pickerController","translate","this","ngOnInit","swarmId","snapshot","params","entryId","queryParams","type","typeOptions","actionsForType","Object","values","EntryType","entryForm","group","actionType","FormControl","value","disabled","Validators","date","Date","amount","text","ionViewDidEnter","getEntry","subscribe","entry","controls","setValue","toString","e","initialDate","toISOString","onActionTypeChange","save","saving","get","id","updateEntry","onSuccessfullySaved","bind","createEntry","back","ngAfterViewInit","selectRef","open","openAmountPicker","create","columns","getAmountOptions","buttons","instant","role","handler","present","setDate","dateStr","options","countable","i","lowerBound","upperBound","stepWidth","push","unitSingular","unit","name","CountableForEntryType","onCancel","JournalEditEntryPage","selectors","ctx","JournalEditEntryPageRoutingModule","RouterModule","JournalEditEntryPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/swarms/swarm-journal/journal-edit-entry/journal-edit-entry.page.html","./src/app/pages/swarms/swarm-journal/journal-edit-entry/journal-edit-entry-routing.module.ts","./src/app/pages/swarms/swarm-journal/journal-edit-entry/journal-edit-entry.page.ts","./src/app/pages/swarms/swarm-journal/journal-edit-entry/journal-edit-entry.module.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button [routerLink]=\"'/swarms/view/' + swarmId\">\n        <ion-icon name=\"arrow-back-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>{{ (entryId ? 'JOURNAL_PAGE.editEntry' : 'JOURNAL_PAGE.newEntry') | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"entryForm\">\n    <ion-list mode=\"ios\" [inset]=\"true\">\n      <ion-item>\n        <ion-label position=\"stacked\">{{ 'JOURNAL_PAGE.actionType' | translate }}</ion-label>\n        <ion-select\n          #actionSelect\n          name=\"actionType\"\n          interface=\"action-sheet\"\n          formControlName=\"actionType\"\n          (ionChange)=\"onActionTypeChange()\"\n          (ionCancel)=\"onCancel()\"\n          [disabled]=\"!!entryId\"\n          [okText]=\"'GENERAL.ok' | translate\"\n          [cancelText]=\"'GENERAL.cancel' | translate\"\n        >\n          <ion-select-option *ngFor=\"let option of typeOptions\" [value]=\"option\"\n            >{{ 'ACTIONS.' + option | translate }}</ion-select-option\n          >\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-label position=\"stacked\"> {{ 'JOURNAL_PAGE.date' | translate }} </ion-label>\n        <ion-input id=\"date\">{{ entryForm.controls.date.value | date:'dd.MM.yyyy' }}</ion-input>\n        <ion-popover trigger=\"date\" size=\"cover\">\n          <ng-template>\n            <ion-datetime\n              #popoverDate\n              (ionChange)=\"setDate(popoverDate.value)\"\n              presentation=\"date\"\n              locale=\"de-DE\"\n              [value]=\"initialDate\"\n            ></ion-datetime>\n          </ng-template>\n        </ion-popover>\n      </ion-item>\n      <ion-item [ngClass]=\"{'ion-hide': !countable}\">\n        <ion-label position=\"stacked\">\n          {{ 'JOURNAL_PAGE.amount' | translate }}\n          <span *ngIf=\"countable\">({{ 'UNIT.' + countable.unit | translate }})</span>\n        </ion-label>\n        <ion-input formControlName=\"amount\" (click)=\"openAmountPicker()\" value=\"0\"> </ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label position=\"stacked\">{{ 'JOURNAL_PAGE.comment' | translate }}</ion-label>\n        <ion-textarea formControlName=\"text\" placeholder=\"{{'JOURNAL_PAGE.optionalComment' | translate}}\">\n        </ion-textarea>\n      </ion-item>\n    </ion-list>\n\n    <div class=\"controls-container\">\n      <ion-button class=\"ion-padding-horizontal\" [disabled]=\"!entryForm.valid || saving\" type=\"submit\" (click)=\"save()\">\n        {{ 'GENERAL.save' | translate }}\n      </ion-button>\n    </div>\n  </form>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { JournalEditEntryPage } from './journal-edit-entry.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JournalEditEntryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class JournalEditEntryPageRoutingModule {}\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { IonSelect, NavController, PickerController } from \"@ionic/angular\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { JournalService } from \"src/app/services/journal.service\";\nimport { Countable, CountableForEntryType } from \"src/app/types/Countable\";\nimport { actionsForType, EntryType } from \"src/app/types/EntryType\";\nimport { JournalEntry } from \"src/app/types/JournalEntry\";\n\n@Component({\n  selector: \"app-journal-edit-entry\",\n  templateUrl: \"./journal-edit-entry.page.html\",\n  styleUrls: [\"./journal-edit-entry.page.scss\"],\n})\nexport class JournalEditEntryPage implements OnInit, AfterViewInit {\n  swarmId: string;\n  entryId: string;\n  type: string;\n  typeOptions: EntryType[];\n  actionType: EntryType;\n  entryForm: FormGroup;\n  saving = false;\n  countable: Countable;\n  initialDate: string;\n  @ViewChild(\"actionSelect\", { static: false }) selectRef: IonSelect;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private journalService: JournalService,\n    private navCtrl: NavController,\n    private pickerController: PickerController,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.swarmId = this.route.snapshot.params.swarmId;\n    this.entryId = this.route.snapshot.queryParams.entryId;\n    this.type = this.route.snapshot.queryParams.type;\n\n    this.typeOptions = this.type ? actionsForType[this.type] : Object.values(EntryType);\n\n    this.entryForm = this.formBuilder.group({\n      actionType: new FormControl({ value: null, disabled: false }, Validators.required),\n      date: [new Date(), Validators.required],\n      amount: [0],\n      text: [\"\"],\n    });\n  }\n\n  ionViewDidEnter() {\n    if (this.entryId) {\n      this.journalService.getEntry(this.swarmId, this.entryId).subscribe((entry: JournalEntry) => {\n        this.entryForm.controls.actionType.setValue(entry.type ? entry.type.toString() : null);\n        this.entryForm.controls.text.setValue(entry.text || \"\");\n        this.entryForm.controls.amount.setValue(entry.amount || \"\");\n        if (entry.date) {\n          this.entryForm.controls.date.setValue(new Date(entry.date));\n          this.initialDate = this.entryForm.controls.date.value.toISOString();\n        } else {\n          this.initialDate = new Date().toISOString();\n        }\n        this.onActionTypeChange();\n      });\n    } else {\n      this.entryForm.controls.actionType.setValue(null);\n      this.entryForm.controls.text.setValue(\"\");\n      this.entryForm.controls.amount.setValue(\"\");\n      this.entryForm.controls.date.setValue(new Date());\n      this.initialDate = new Date().toISOString();\n    }\n  }\n\n  save() {\n    if (this.saving) {\n      return;\n    }\n\n    this.saving = true;\n    const entry: JournalEntry = {\n      type: this.entryForm.get(\"actionType\").value,\n      date: this.entryForm.get(\"date\").value,\n      text: this.entryForm.get(\"text\").value,\n      amount: this.entryForm.get(\"amount\").value,\n    };\n\n    if (this.entryId) {\n      entry.id = this.entryId;\n      this.journalService.updateEntry(this.swarmId, entry).subscribe(this.onSuccessfullySaved.bind(this));\n    } else {\n      this.journalService.createEntry(this.swarmId, entry).subscribe(this.onSuccessfullySaved.bind(this));\n    }\n  }\n\n  onSuccessfullySaved() {\n    this.navCtrl.back();\n  }\n\n  ngAfterViewInit() {\n    if (this.selectRef && !this.entryId) {\n      this.selectRef.open();\n    }\n  }\n\n  async openAmountPicker() {\n    const picker = await this.pickerController.create({\n      columns: this.getAmountOptions(),\n      buttons: [\n        {\n          text: this.translate.instant(\"GENERAL.cancel\"),\n          role: \"cancel\",\n        },\n        {\n          text: this.translate.instant(\"GENERAL.ok\"),\n          handler: (value) => {\n            this.entryForm.controls.amount.setValue(+value.amount.value || 0);\n          },\n        },\n      ],\n    });\n\n    await picker.present();\n  }\n\n  setDate(dateStr: string | string[]) {\n    this.entryForm.controls.date.setValue(new Date(typeof dateStr === \"string\" ? dateStr : dateStr[0]));\n  }\n\n  getAmountOptions() {\n    const options = [];\n\n    if (!this.countable) {\n      return options;\n    }\n\n    for (let i = this.countable.lowerBound; i <= this.countable.upperBound; i += this.countable.stepWidth) {\n      options.push({\n        text: i + \" \" + this.translate.instant(\"UNIT.\" + (i === 1 ? this.countable.unitSingular : this.countable.unit)),\n        value: i,\n      });\n    }\n\n    return [{ name: \"amount\", options }];\n  }\n\n  onActionTypeChange() {\n    const e = this.entryForm.controls.actionType.value as EntryType;\n    this.countable = CountableForEntryType.get(e);\n  }\n\n  onCancel() {\n    this.navCtrl.back();\n  }\n}\n","import { TranslateModule } from \"@ngx-translate/core\";\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { JournalEditEntryPageRoutingModule } from \"./journal-edit-entry-routing.module\";\n\nimport { JournalEditEntryPage } from \"./journal-edit-entry.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    JournalEditEntryPageRoutingModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  declarations: [JournalEditEntryPage],\n})\nexport class JournalEditEntryPageModule {}\n"]}