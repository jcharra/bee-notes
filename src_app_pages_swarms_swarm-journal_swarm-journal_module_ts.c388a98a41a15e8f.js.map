{"version":3,"file":"src_app_pages_swarms_swarm-journal_swarm-journal_module_ts.c388a98a41a15e8f.js","mappings":"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","names":["i0","ctx_r7","oxw","routes","path","component","constructor","swarmService","journalService","route","alertCtrl","translate","this","getYear","Date","ngOnInit","swarmId","snapshot","params","readonly","queryParams","swarm$","getSwarm","ionViewDidEnter","loadEntries","getEntries","startAt","displayYear","endAt","subscribe","es","journalEntries","updateFilteredEntries","filteredJournalEntries","filter","e","actionsForType","indexOf","type","deleteEntry","entry","create","header","instant","message","buttons","text","role","cssClass","handler","id","present","datesDiffer","d1","d2","format","changeYear","amount","maxYear","minYear","toggleFilter","tappedFilter","SwarmJournalPage","selectors","ctx","loadChildren","i","then","m","JournalEditEntryPageModule","SwarmJournalPageRoutingModule","RouterModule","SwarmJournalPageModule","CommonModule","FormsModule","IonicModule","SharedModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/swarms/swarm-journal/swarm-journal.page.html","./src/app/pages/swarms/swarm-journal/swarm-journal-routing.module.ts","./src/app/pages/swarms/swarm-journal/swarm-journal.page.ts","./src/app/pages/swarms/swarm-journal/swarm-journal.module.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button [routerLink]=\"'/swarms/view/' + swarmId\">\n        <ion-icon name=\"arrow-back-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>{{ (swarm$ | async)?.name }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list lines=\"full\" mode=\"ios\" inset=\"true\">\n    <ion-item>\n      <ion-icon\n        [color]=\"displayYear > minYear ? 'primary' : 'light'\"\n        name=\"play-back-outline\"\n        slot=\"start\"\n        (click)=\"changeYear(-1)\"\n      ></ion-icon>\n      <ion-label class=\"ion-text-center\"><strong>{{ displayYear }}</strong></ion-label>\n      <ion-icon\n        [color]=\"displayYear < maxYear ? 'primary' : 'light'\"\n        name=\"play-forward-outline\"\n        slot=\"end\"\n        (click)=\"changeYear(1)\"\n      ></ion-icon>\n    </ion-item>\n\n    <ion-item>\n      <ion-grid>\n        <ion-row>\n          <ion-col (click)=\"toggleFilter('varroa')\">\n            <ion-fab-button class=\"imgbutton\" [disabled]=\"filter && filter !== 'varroa'\">\n              <mite></mite>\n            </ion-fab-button>\n          </ion-col>\n          <ion-col (click)=\"toggleFilter('queen')\">\n            <ion-fab-button class=\"imgbutton\" [disabled]=\"filter && filter !== 'queen'\">\n              <crown></crown>\n            </ion-fab-button>\n          </ion-col>\n          <ion-col (click)=\"toggleFilter('frames')\">\n            <ion-fab-button [disabled]=\"filter && filter !== 'frames'\" class=\"imgbutton\">\n              <ion-icon name=\"git-compare-outline\"></ion-icon>\n            </ion-fab-button>\n          </ion-col>\n          <ion-col (click)=\"toggleFilter('other')\">\n            <ion-fab-button color=\"primary\" [disabled]=\"filter && filter !== 'other'\">\n              <ion-icon name=\"ellipsis-horizontal-outline\"></ion-icon>\n            </ion-fab-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <ng-container *ngFor=\"let entry of filteredJournalEntries; let idx = index\">\n      <ion-item *ngIf=\"idx === 0 || datesDiffer(entry.date, filteredJournalEntries[idx - 1].date)\">\n        <ion-label class=\"ion-text-center\"> {{ entry.date | date:'MMM dd'}} </ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-label>\n          <div class=\"ion-float-left ion-margin-start ion-text-wrap\">\n            <app-journal-entry-short [entry]=\"entry\"></app-journal-entry-short>\n            <div class=\"journalText\">{{ entry.text }}</div>\n          </div>\n        </ion-label>\n\n        <ion-buttons slot=\"end\" *ngIf=\"!readonly\">\n          <ion-button routerLink=\"edit\" [queryParams]=\"{entryId: entry.id}\">\n            <ion-icon name=\"create-outline\" color=\"secondary\"></ion-icon>\n          </ion-button>\n          <ion-button (click)=\"deleteEntry(entry)\">\n            <ion-icon name=\"trash-outline\" color=\"secondary\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-item>\n    </ng-container>\n\n    <ion-item *ngIf=\"filteredJournalEntries && filteredJournalEntries.length === 0\">\n      <ion-label> {{ 'JOURNAL_PAGE.noTrackedActivity' | translate }} </ion-label>\n    </ion-item>\n  </ion-list>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SwarmJournalPage } from './swarm-journal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SwarmJournalPage\n  }, {\n    path: 'edit',\n    loadChildren: () =>\n      import('./journal-edit-entry/journal-edit-entry.module').then(\n        m => m.JournalEditEntryPageModule\n      )\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SwarmJournalPageRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AlertController } from \"@ionic/angular\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { format, getYear } from \"date-fns\";\nimport { Observable } from \"rxjs\";\nimport { JournalService } from \"src/app/services/journal.service\";\nimport { SwarmService } from \"src/app/services/swarm.service\";\nimport { actionsForType } from \"src/app/types/EntryType\";\nimport { JournalEntry } from \"src/app/types/JournalEntry\";\nimport { Swarm } from \"src/app/types/Swarm\";\n\n@Component({\n  selector: \"app-swarm-journal\",\n  templateUrl: \"./swarm-journal.page.html\",\n  styleUrls: [\"./swarm-journal.page.scss\"],\n})\nexport class SwarmJournalPage implements OnInit {\n  journalEntries: JournalEntry[];\n  filteredJournalEntries: JournalEntry[];\n  swarmId: string;\n  swarm$: Observable<Swarm>;\n  readonly: boolean;\n  displayYear = getYear(new Date());\n  maxYear = getYear(new Date());\n  minYear = 2020;\n  filter: string = null;\n\n  constructor(\n    private swarmService: SwarmService,\n    private journalService: JournalService,\n    private route: ActivatedRoute,\n    private alertCtrl: AlertController,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.swarmId = this.route.snapshot.params.swarmId;\n    this.readonly = this.route.snapshot.queryParams.readonly;\n\n    this.swarm$ = this.swarmService.getSwarm(this.swarmId);\n  }\n\n  ionViewDidEnter() {\n    this.loadEntries();\n  }\n\n  loadEntries() {\n    const startOfYear = this.displayYear + \"-01-01\";\n    const endOfYear = this.displayYear + \"-12-31\";\n    this.journalService\n      .getEntries(this.swarmId, { startAt: startOfYear, endAt: endOfYear })\n      .subscribe((es: JournalEntry[]) => {\n        this.journalEntries = es || [];\n        this.updateFilteredEntries();\n      });\n  }\n\n  updateFilteredEntries() {\n    if (!this.filter) {\n      this.filteredJournalEntries = this.journalEntries;\n    } else {\n      this.filteredJournalEntries = this.journalEntries.filter(\n        (e) => actionsForType[this.filter].indexOf(e.type) > -1\n      );\n    }\n  }\n\n  async deleteEntry(entry: JournalEntry) {\n    const alert = await this.alertCtrl.create({\n      header: this.translate.instant(\"JOURNAL_PAGE.deleteEntryHeading\"),\n      message: this.translate.instant(\"JOURNAL_PAGE.deleteEntryMsg\"),\n      buttons: [\n        {\n          text: this.translate.instant(\"GENERAL.cancel\"),\n          role: \"cancel\",\n          cssClass: \"secondary\",\n        },\n        {\n          text: this.translate.instant(\"JOURNAL_PAGE.deleteEntryConfirm\"),\n          cssClass: \"danger\",\n          handler: () => {\n            this.journalService\n              .deleteEntry(this.swarmId, entry.id)\n              .subscribe(() => {\n                this.loadEntries();\n              });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  datesDiffer(d1: Date | string, d2: Date | string) {\n    return (\n      format(new Date(d1), \"yyyy-MM-dd\") !== format(new Date(d2), \"yyyy-MM-dd\")\n    );\n  }\n\n  changeYear(amount) {\n    if (\n      this.displayYear + amount <= this.maxYear &&\n      this.displayYear + amount >= this.minYear\n    ) {\n      this.displayYear += amount;\n      this.loadEntries();\n    }\n  }\n\n  toggleFilter(tappedFilter: string) {\n    if (this.filter === tappedFilter) {\n      this.filter = null;\n    } else {\n      this.filter = tappedFilter;\n    }\n    this.updateFilteredEntries();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { SwarmJournalPageRoutingModule } from \"./swarm-journal-routing.module\";\n\nimport { SwarmJournalPage } from \"./swarm-journal.page\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SwarmJournalPageRoutingModule,\n    SharedModule,\n    TranslateModule,\n  ],\n  declarations: [SwarmJournalPage],\n})\nexport class SwarmJournalPageModule {}\n"]}