{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-textarea_entry_js.9433de197c77fa7f.js","mappings":"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","names":["Textarea","constructor","hostRef","registerInstance","this","ionChange","createEvent","ionInput","ionStyle","ionBlur","ionFocus","inputId","textareaIds","didBlurAfterEdit","inheritedAttributes","fireFocusEvents","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","emit","onFocus","focusChange","onBlur","onKeyDown","checkClearOnEdit","debounceChanged","debounceEvent","disabledChanged","valueChanged","getValue","runAutoGrow","connectedCallback","document","dispatchEvent","CustomEvent","detail","el","disconnectedCallback","componentWillLoad","Object","assign","inheritAriaAttributes","inheritAttributes","componentDidLoad","setFocus","t","focus","setBlur","blur","getInputElement","Promise","resolve","interactive","textarea","input","undefined","placeholder","hasValue","writeTask","_a","textareaWrapper","dataset","replicatedValue","render","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","class","createColorClasses","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","getElement","watchers","style","ios","md","textareaMdCss","hostContext","selector","closest","cssClassMap","length","getClassMap","classes","map","getClassList","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js","./node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-1a99aeb7.js';\nimport { b as getIonMode } from './ionic-global-04e268e7.js';\nimport { h as debounceEvent, i as inheritAriaAttributes, j as inheritAttributes, k as findItemLabel } from './helpers-2914b3be.js';\nimport { c as createColorClasses } from './theme-7670341c.js';\n\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:0.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{display:grid;min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.textarea-wrapper.sc-ion-textarea-ios::after{white-space:pre-wrap;content:attr(data-replicated-value) \\\" \\\";visibility:hidden}.native-textarea.sc-ion-textarea-ios,.textarea-wrapper.sc-ion-textarea-ios::after{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;grid-area:1/1/2/2;word-break:break-word}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios,.textarea-wrapper.sc-ion-textarea-ios::after{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}[auto-grow].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{height:100%}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\n\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:0.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{display:grid;min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.textarea-wrapper.sc-ion-textarea-md::after{white-space:pre-wrap;content:attr(data-replicated-value) \\\" \\\";visibility:hidden}.native-textarea.sc-ion-textarea-md,.textarea-wrapper.sc-ion-textarea-md::after{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;grid-area:1/1/2/2;word-break:break-word}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md,.textarea-wrapper.sc-ion-textarea-md::after{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}[auto-grow].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{height:100%}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n\nconst Textarea = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.inputId = `ion-textarea-${textareaIds++}`;\n    this.didBlurAfterEdit = false;\n    this.inheritedAttributes = {};\n    /**\n     * This is required for a WebKit bug which requires us to\n     * blur and focus an input to properly focus the input in\n     * an item with delegatesFocus. It will no longer be needed\n     * with iOS 14.\n     *\n     * @internal\n     */\n    this.fireFocusEvents = true;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     * Available options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.\n     */\n    this.autocapitalize = 'none';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n    this.autofocus = false;\n    /**\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n     */\n    this.clearOnEdit = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\n     */\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the textarea.\n     */\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n    this.spellcheck = false;\n    /**\n     * If `true`, the textarea container will grow and shrink based\n     * on the contents of the textarea.\n     */\n    this.autoGrow = false;\n    /**\n     * The value of the textarea.\n     */\n    this.value = '';\n    this.onInput = (ev) => {\n      if (this.nativeInput) {\n        this.value = this.nativeInput.value;\n      }\n      this.emitStyle();\n      this.ionInput.emit(ev);\n    };\n    this.onFocus = (ev) => {\n      this.hasFocus = true;\n      this.focusChange();\n      if (this.fireFocusEvents) {\n        this.ionFocus.emit(ev);\n      }\n    };\n    this.onBlur = (ev) => {\n      this.hasFocus = false;\n      this.focusChange();\n      if (this.fireFocusEvents) {\n        this.ionBlur.emit(ev);\n      }\n    };\n    this.onKeyDown = () => {\n      this.checkClearOnEdit();\n    };\n  }\n  debounceChanged() {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  /**\n   * Update the native input element when the value changes\n   */\n  valueChanged() {\n    const nativeInput = this.nativeInput;\n    const value = this.getValue();\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n    this.runAutoGrow();\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  connectedCallback() {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el,\n      }));\n    }\n  }\n  disconnectedCallback() {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el,\n      }));\n    }\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, ['data-form-type', 'title']));\n  }\n  componentDidLoad() {\n    this.runAutoGrow();\n  }\n  /**\n   * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\n   * `textarea.focus()`.\n   */\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  }\n  /**\n   * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\n   * `textarea.blur()`.\n   * @internal\n   */\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n  /**\n   * Returns the native `<textarea>` element used under the hood.\n   */\n  getInputElement() {\n    return Promise.resolve(this.nativeInput);\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      textarea: true,\n      input: true,\n      'interactive-disabled': this.disabled,\n      'has-placeholder': this.placeholder !== undefined,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus,\n    });\n  }\n  runAutoGrow() {\n    if (this.nativeInput && this.autoGrow) {\n      writeTask(() => {\n        var _a;\n        if (this.textareaWrapper) {\n          // Replicated value is an attribute to be used in the stylesheet\n          // to set the inner contents of a pseudo element.\n          this.textareaWrapper.dataset.replicatedValue = (_a = this.value) !== null && _a !== void 0 ? _a : '';\n        }\n      });\n    }\n  }\n  /**\n   * Check if we need to clear the text input if clearOnEdit is enabled\n   */\n  checkClearOnEdit() {\n    if (!this.clearOnEdit) {\n      return;\n    }\n    // Did the input value change after it was blurred and edited?\n    if (this.didBlurAfterEdit && this.hasValue()) {\n      // Clear the input\n      this.value = '';\n    }\n    // Reset the flag\n    this.didBlurAfterEdit = false;\n  }\n  focusChange() {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n    this.emitStyle();\n  }\n  hasValue() {\n    return this.getValue() !== '';\n  }\n  getValue() {\n    return this.value || '';\n  }\n  render() {\n    const mode = getIonMode(this);\n    const value = this.getValue();\n    const labelId = this.inputId + '-lbl';\n    const label = findItemLabel(this.el);\n    if (label) {\n      label.id = labelId;\n    }\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"div\", { class: \"textarea-wrapper\", ref: (el) => (this.textareaWrapper = el) }, h(\"textarea\", Object.assign({ class: \"native-textarea\", \"aria-labelledby\": label ? labelId : null, ref: (el) => (this.nativeInput = el), autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, this.inheritedAttributes), value))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"debounce\": [\"debounceChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet textareaIds = 0;\nTextarea.style = {\n  ios: textareaIosCss,\n  md: textareaMdCss\n};\n\nexport { Textarea as ion_textarea };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}