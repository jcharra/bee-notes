{"version":3,"file":"node_modules_capacitor_local-notifications_dist_esm_web_js.4b4f7cc38e2c29b3.js","mappings":"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","names":["WebPlugin","constructor","super","arguments","this","pending","hasNotificationSupport","window","Notification","requestPermission","permission","e","name","createChannel","i","unimplemented","deleteChannel","listChannels","schedule","options","t","unavailable","notification","notifications","sendNotification","map","id","getPending","registerActionTypes","cancel","filter","find","n","areEnabled","display","checkPermissions","value","requestPermissions","transformNotificationPermission","sendPending","_a","toRemove","now","Date","getTime","at","buildNotification","push","diff","setTimeout","localNotification","title","body","addEventListener","onClick","bind","onShow","notifyListeners","actionId","data"],"sourceRoot":"webpack:///","sources":["./node_modules/@capacitor/local-notifications/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.pending = [];\n        this.hasNotificationSupport = () => {\n            if (!('Notification' in window) || !Notification.requestPermission) {\n                return false;\n            }\n            if (Notification.permission !== 'granted') {\n                // don't test for `new Notification` if permission has already been granted\n                // otherwise this sends a real notification on supported browsers\n                try {\n                    new Notification('');\n                }\n                catch (e) {\n                    if (e.name == 'TypeError') {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n    }\n    async createChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async listChannels() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async schedule(options) {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        for (const notification of options.notifications) {\n            this.sendNotification(notification);\n        }\n        return {\n            notifications: options.notifications.map(notification => ({\n                id: notification.id,\n            })),\n        };\n    }\n    async getPending() {\n        return {\n            notifications: this.pending,\n        };\n    }\n    async registerActionTypes() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async cancel(pending) {\n        this.pending = this.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    }\n    async areEnabled() {\n        const { display } = await this.checkPermissions();\n        return {\n            value: display === 'granted',\n        };\n    }\n    async requestPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(await Notification.requestPermission());\n        return { display };\n    }\n    async checkPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(Notification.permission);\n        return { display };\n    }\n    transformNotificationPermission(permission) {\n        switch (permission) {\n            case 'granted':\n                return 'granted';\n            case 'denied':\n                return 'denied';\n            default:\n                return 'prompt';\n        }\n    }\n    sendPending() {\n        var _a;\n        const toRemove = [];\n        const now = new Date().getTime();\n        for (const notification of this.pending) {\n            if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) &&\n                notification.schedule.at.getTime() <= now) {\n                this.buildNotification(notification);\n                toRemove.push(notification);\n            }\n        }\n        this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n    }\n    sendNotification(notification) {\n        var _a;\n        if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n            const diff = notification.schedule.at.getTime() - new Date().getTime();\n            this.pending.push(notification);\n            setTimeout(() => {\n                this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(notification);\n    }\n    buildNotification(notification) {\n        const localNotification = new Notification(notification.title, {\n            body: notification.body,\n        });\n        localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n        localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n        return localNotification;\n    }\n    onClick(notification) {\n        const data = {\n            actionId: 'tap',\n            notification,\n        };\n        this.notifyListeners('localNotificationActionPerformed', data);\n    }\n    onShow(notification) {\n        this.notifyListeners('localNotificationReceived', notification);\n    }\n}\n"]}